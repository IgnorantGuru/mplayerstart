-----BEGIN PGP SIGNED MESSAGE-----
Hash: SHA256

0d0f0ad07c9b471719faf2b0d248c8d13bec4ad536d7dbf12d8fbb27a43ea833  mplayerstart_1.4.2-2_all.deb
310e72d68ba24b3f44b57bfccc60c4665e9daa7fef7540489946054ceabd810b  mplayerstart-1.4.2.tar.xz

#
# This file (mplayerstart-1.4.2.SHA256.asc) is used to authenticate download of
# mplayerstart version 1.4.2
# 
# Homepage: http://igurublog.wordpress.com/downloads/script-mplayerstart/
# 
# 
# Why Authenticate?
# 
#   Verifying the authenticity of downloaded files prior to installation is
#   important to ensure that your download is not corrupt and that no one has
#   tampered with the server holding the files.
#
#
# 1) If you don't already have IgnorantGuru's CURRENT key on your keyring:
#
#   gpg --keyserver keys.gnupg.net --recv-keys 0x7977070A723C6CCB696C0B0227A5AC5A01937621
#     (if you receive an error, try again)
#     
#   Also visually verify that the given fingerprint matches the one shown here:
#     http://igurublog.wordpress.com/contact-ignorantguru/
#
#
# 2) Download one or more files (the first is required):
#
#   wget https://raw.github.com/IgnorantGuru/mplayerstart/master/packages/1.4.2/mplayerstart-1.4.2.SHA256.asc
#   wget https://raw.github.com/IgnorantGuru/mplayerstart/master/packages/1.4.2/mplayerstart_1.4.2-2_all.deb
#   wget https://raw.github.com/IgnorantGuru/mplayerstart/master/packages/1.4.2/mplayerstart-1.4.2.tar.xz
#
#
# 3) Check signature and files:
#
#   gpg -d mplayerstart-1.4.2.SHA256.asc | sha256sum --check
#
#   This should report a good signature and an OK for each file present:  
#
#     gpg: Signature made <SIGNATURE DATE> using DSA key ID 01937621    <--
# --> mplayerstart_1.4.2-2_all.deb: OK
# --> mplayerstart-1.4.2.tar.xz: OK
# --> gpg: Good signature from IgnorantGuru <EMAIL>
#     gpg: WARNING: This key is not certified with a trusted signature!
#     gpg:          There is no indication that the signature belongs to the owner.
#     sha256sum: WARNING: x lines are improperly formatted
#
#   If "BAD signature" or the wrong key ID is reported, or if FAILED appears
#   next to any file you plan to use, DO NOT USE the file.  A "key is not
#   certified" warning (shown above) is normal and can be safely ignored if
#   you visually verified the key fingerprint in step 1.
#
-----BEGIN PGP SIGNATURE-----
Version: GnuPG v1.4.12 (GNU/Linux)

iF4EAREIAAYFAlJieDQACgkQJ6WsWgGTdiGV7QD/YXVXYUftA66XdWJpx364t6Hh
tbaSBv0TVU6Y65QRBCsBALIhmJK+OXPyM/moXecpDEmX2oj8TBDhKKmUDGuWqROi
=EpNl
-----END PGP SIGNATURE-----
